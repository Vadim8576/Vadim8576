{"version":3,"sources":["common/mySetDate.js","../node_modules/react-bootstrap/esm/Table.js","components/mainPage/moviesInfo/MovieReleasesContainer.js"],"names":["mySetDate","d","locate","options","year","month","day","timezone","Date","toLocaleString","Table","React","forwardRef","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass","MovieReleasesContainer","releases","getReleases","releases_isFetching","getDetails","movie_info","useEffect","movie_id","match","params","to","src","poster_path","alt","title","Spinner","animation","MyTable","map","i","key","iso_3166_1","release_dates","index","release_date","certification","type","note","compose","connect","state","movies","withRouter"],"mappings":"2GAceA,IAdG,SAACC,GAAoB,IAAjBC,EAAgB,uDAAT,KACnBC,EAAU,CACZC,KAAM,UACNC,MAAO,UACPC,IAAK,UAILC,SAAU,OAEd,MAAW,KAAJN,EAAS,KAAO,IAAIO,KAAKP,GAAGQ,eAAeP,EAAQC,K,gLC4B/CO,EAjCHC,IAAMC,YAAW,SAAUC,EAAMC,GAC3C,IAAIC,EAAWF,EAAKE,SAChBC,EAAYH,EAAKG,UACjBC,EAAUJ,EAAKI,QACfC,EAAWL,EAAKK,SAChBC,EAAaN,EAAKM,WAClBC,EAAQP,EAAKO,MACbC,EAAOR,EAAKQ,KACZC,EAAUT,EAAKS,QACfC,EAAaV,EAAKU,WAClBC,EAAQC,YAA8BZ,EAAM,CAAC,WAAY,YAAa,UAAW,WAAY,aAAc,QAAS,OAAQ,UAAW,eAEvIa,EAAoBC,YAAmBZ,EAAU,SACjDa,EAAUC,IAAWb,EAAWU,EAAmBJ,GAAWI,EAAoB,IAAMJ,EAASD,GAAQK,EAAoB,IAAML,EAAMJ,GAAWS,EAAoB,WAAYR,GAAYQ,EAAoB,YAAaP,GAAcO,EAAoB,cAAeN,GAASM,EAAoB,UAC/SI,EAAQnB,IAAMoB,cAAc,QAASC,YAAS,GAAIR,EAAO,CAC3DR,UAAWY,EACXd,IAAKA,KAGP,GAAIS,EAAY,CACd,IAAIU,EAAkBP,EAAoB,cAM1C,MAJ0B,kBAAfH,IACTU,EAAkBA,EAAkB,IAAMV,GAGrCZ,IAAMoB,cAAc,MAAO,CAChCf,UAAWiB,GACVH,GAGL,OAAOA,K,SCxBLI,G,OAAyB,YAAuF,IAApFC,EAAmF,EAAnFA,SAA+BC,GAAoD,EAAzEC,oBAAyE,EAApDD,aAAaE,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,WAAef,EAAY,0FAQ/G,OANAgB,qBAAU,WACN,IAAMC,EAAWjB,EAAMkB,MAAMC,OAAOF,SACpCL,EAAYK,GACZH,EAAWG,KACZ,IAGC,oCACI,yBAAKzB,UAAU,2BACX,yBAAKA,UAAU,oBACX,kBAAC,IAAD,CAAS4B,GAAE,sBAAiBpB,EAAMkB,MAAMC,OAAOF,UAAYzB,UAAU,QACjE,yBAAK6B,IAAKN,EAAWO,YAAX,uDAAyEP,EAAWO,aAAgB,qBAAsBC,IAAI,yCAD5I,2DAKJ,yBAAK/B,UAAU,kBACX,4BAAKuB,EAAWS,QAEpB,8BAKJ,oGACA,6BACCb,EACK,kBAAC,EAAD,CAASA,SAAUA,IACnB,kBAACc,EAAA,EAAD,CAASC,UAAU,cAQ/BC,EAAU,SAAC,GAAkB,IAAhBhB,EAAe,EAAfA,SACf,OAAO,oCACFA,EAASiB,KAAI,SAAAC,GAAC,OACX,yBAAKC,IAAKD,EAAEE,YACR,yBAAKvC,UAAU,0BACVqC,EAAEE,YAGP,kBAAC,EAAD,CAAOrC,UAAQ,GACX,+BACI,4BACI,wDACA,0EACA,kDACA,8FAGR,+BAEKmC,EAAEG,cAAcJ,KAAI,SAACC,EAAGI,GAAJ,OACjB,wBAAIH,IAAKG,GACL,4BAAKzD,YAAUqD,EAAEK,eACjB,4BAAKL,EAAEM,eACP,4BAAKN,EAAEO,MACP,4BAAKP,EAAEQ,YAUvB,mCAeD3B,YAAyB4B,YAAQC,aAPxB,SAACC,GAAD,MAAY,CAChC7B,SAAU6B,EAAMC,OAAO9B,SACvBE,oBAAqB2B,EAAMC,OAAO5B,oBAClCE,WAAYyB,EAAMC,OAAO1B,cAI4C,CACrEH,gBACAE,iBACA4B,IAHoCJ,CAGxB5B","file":"static/js/11.bd0f6da0.chunk.js","sourcesContent":["const mySetDate = (d, locate='ru') => {\r\n    const options = {\r\n        year: 'numeric',\r\n        month: 'numeric',\r\n        day: 'numeric',\r\n        // hour: 'numeric',\r\n        // minute: 'numeric',\r\n        // second: 'numeric',\r\n        timezone: 'UTC'\r\n    };\r\n    return d==='' ? null : new Date(d).toLocaleString(locate, options);\r\n}\r\n\r\n\r\nexport default mySetDate;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getReleases, getDetails } from '../../../redux/movie_reducer';\r\nimport { compose } from 'redux';\r\nimport { withRouter, NavLink } from 'react-router-dom';\r\nimport { Spinner, Table } from 'react-bootstrap';\r\nimport mySetDate from '../../../common/mySetDate';\r\nimport './../../../styles/page_with_full_list.css';\r\n\r\n\r\n\r\n\r\nlet MovieReleasesContainer = ({ releases, releases_isFetching, getReleases, getDetails, movie_info, ...props }) => {\r\n\r\n    useEffect(() => {\r\n        const movie_id = props.match.params.movie_id;\r\n        getReleases(movie_id);\r\n        getDetails(movie_id);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className='realeases_header border'>\r\n                <div className='realeases_poster'>\r\n                    <NavLink to={`/movie_info/${props.match.params.movie_id}`} className='link'>\r\n                        <img src={movie_info.poster_path ? `https://image.tmdb.org/t/p/w220_and_h330_face${movie_info.poster_path}` : '/img/no_poster.jpg'} alt='постер' />\r\n                        Вернуться\r\n                    </NavLink>\r\n                </div>\r\n                <div className='realeases_text'>\r\n                    <h4>{movie_info.title}</h4>\r\n                </div>\r\n                <br />\r\n\r\n            </div>\r\n\r\n\r\n            <h5>Даты релизов:</h5>\r\n            <br />\r\n            {releases\r\n                ? <MyTable releases={releases} />\r\n                : <Spinner animation='border' />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst MyTable = ({ releases }) => {\r\n    return <>\r\n        {releases.map(i =>\r\n            <div key={i.iso_3166_1}>\r\n                <div className=\"list-group-item active\">\r\n                    {i.iso_3166_1}\r\n                </div>\r\n\r\n                <Table bordered>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Дата</th>\r\n                            <th>Рейтинг</th>\r\n                            <th>Тип</th>\r\n                            <th>Примечание</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        {i.release_dates.map((i, index) =>\r\n                            <tr key={index}>\r\n                                <td>{mySetDate(i.release_date)}</td>\r\n                                <td>{i.certification}</td>\r\n                                <td>{i.type}</td>\r\n                                <td>{i.note}</td>\r\n                            </tr>\r\n\r\n                        )\r\n                        }\r\n\r\n\r\n\r\n                    </tbody>\r\n                </Table>\r\n                <br />\r\n            </div>)\r\n        }\r\n\r\n    </>\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    releases: state.movies.releases,\r\n    releases_isFetching: state.movies.releases_isFetching,\r\n    movie_info: state.movies.movie_info\r\n})\r\n\r\n\r\nexport default MovieReleasesContainer = compose(connect(mapStateToProps, {\r\n    getReleases,\r\n    getDetails\r\n}), withRouter)(MovieReleasesContainer);"],"sourceRoot":""}