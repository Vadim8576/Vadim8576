{"version":3,"sources":["redux/pagination_reducer.js","components/nav/NavItem.js","components/nav/Nav.js","components/header/HeaderContainer.js","components/mainPage/moviesList/PopularMoviesContainer.js","components/footer/Footer.js","Lazy/withSuspense.js","App.js","serviceWorker.js","redux/reduxStore.js","index.js","api/auth_api.js","redux/auth_reducer.js","api/discover_api.js","utils/genres_reducer_helper.js","redux/discover_reducer.js","api/movie_api.js","api/config_api.js","redux/movie_reducer.js","api/account_api.js","redux/account_reducer.js","api/genres_api.js","redux/genres_reducer.js","api/search_api.js","redux/search_reducer.js","components/pagination/PaginationButtons.js","api/people_api.js","redux/people_reducer.js","components/mainPage/moviesList/FilterPanel.js","components/mainPage/moviesList/Card.js","components/mainPage/moviesList/MoviesList.js","components/mainPage/moviesList/rateStars.js"],"names":["initialState","total_results","total_pages","current_page","setTotalPages","payload","dispatch","type","setTotalPagesAC","setCurrentPage","setCurrentPageAC","pagination_reducer","state","action","NavItem","link","item","to","className","activeClassName","compose","connect","found_movies","found_person","found_movies_dropdown","searchMoviesDropdown","withRouter","isAuth","props","console","log","useState","value","setValue","visible","class","dropdown","setVisible","Navbar","bg","variant","expand","src","alt","Nav","NavDropdown","title","id","onSubmit","e","preventDefault","history","push","placeholder","onChange","length","dropDownSearch","target","map","index","key","poster_path","HeaderContainer","auth","Container","genres","request","discover","discover_movies_is_fetching","discover_movies","pagination","session_id","your_rate","movies","getGenres","setRequestData","setRequestDataGenreIds","getDiscoverMovies","discoverMoviesIsFetching","rateMovie","getAccountStates","rateMovieDelete","getDetails","authentication","popular_movies","popular_movies_isFetching","useEffect","release_date_gte","sort_by","release_date_lte","btn_is_visible","href","FilterPanel","PaginationButtons","MoviesList","data","setRateMovie","rate","accountStates","Footer","withSuspense","Component","Suspense","fallback","Login","React","lazy","Profile","MovieInfo","PeopleInfo","MovieReleases","MovieCasts","MovieCrew","PeopleFilmography","PeopleCrew","Search","NowPlaying","Upcoming","Person","App","fetchWeather","exact","path","render","request_token","getAuth","Boolean","window","location","hostname","match","redusers","combineReducers","auth_reducer","movie_reducer","people","people_reducer","search_reducer","genres_reducer","discover_reducer","account","account_reducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","api_key","instanse","axios","baseURL","auth_api","get","response","request_body","post","username","createSession","discover_api","currentPage","genres_ids","params","join","updateObjectInArray","items","itemId","indexOf","filter","g","genresFetching","discoverMoviesIsFetchingAC","setRequestDataAC","setRequestDataGenreIdsAC","results","movie_api","movie_id","delete","config_api","movie_info","setReleasesAC","setYourRate","a","videos","getCredits","rated","getReleases","releases","countries","i","iso_3166_1","english_name","genre","credits","credits_isFetching","releases_isFetching","movie_info_isFetching","account_api","account_id","page","user_name","rated_movies","getRatedMovies","paload","genres_api","search_api","query","found_tv","isFetching","setFoundMulti","searchMulti","media_type","selectCurrentPage","First","onClick","disabled","Prev","Item","Next","Last","people_api","profiles","people_isFetching","filmography","filmography_isFetching","people_image","images_isFetching","person_list","person_isFetching","PersonListIsFetching","getPeople","people_id","getFilmography","getImages","getPersonList","setPersonList","name","Card","rateMovieRemove","rateVisibleId","setRateVisibleId","stopPropagation","release_date","vote_average","Cards","Spinner","animation","stars","RateStars","star","setnumberOfStars","onMouseOut","onMouseOver"],"mappings":"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","file":"static/js/main.1990fcf6.chunk.js","sourcesContent":["const SET_TOTAL_PAGES = 'SET_TOTAL_PAGES';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\n\r\n\r\nlet initialState = { \r\n    total_results: 0,\r\n    total_pages: 0,\r\n    current_page: 1\r\n};\r\n\r\n\r\n\r\nconst pagination_reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_TOTAL_PAGES:\r\n            return {\r\n                ...state,\r\n                total_results: action.payload.total_results,\r\n                total_pages: action.payload.total_pages\r\n            };\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                current_page: action.payload\r\n            };\r\n\r\n      \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst setTotalPagesAC = (payload) => ({ type: SET_TOTAL_PAGES, payload });\r\nconst setCurrentPageAC = (payload) => ({ type: SET_CURRENT_PAGE, payload });\r\n\r\n\r\n\r\nexport const setTotalPages = (payload) => (dispatch) => {\r\n    // console.log(payload);\r\n    dispatch(setTotalPagesAC(payload));\r\n}\r\n\r\nexport const setCurrentPage = (payload) => (dispatch) => {\r\n    // console.log('currPage=', payload);\r\n    dispatch(setCurrentPageAC(payload));\r\n}\r\n\r\n\r\n\r\nexport default pagination_reducer;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst NavItem = ({link, item}) => {\r\n    // console.log(css.active);\r\n    return (  \r\n        \r\n        <>\r\n            <NavLink to={link} className='nav-link' activeClassName='active'>{item}</NavLink>\r\n        </> \r\n    );\r\n}\r\n\r\nexport default NavItem;","import React, { useState, useEffect } from 'react';\r\nimport NavItem from './NavItem';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { searchMoviesDropdown } from './../../redux/search_reducer';\r\nimport './../../styles/nav.css';\r\nimport { setCurrentPage } from './../../redux/pagination_reducer';\r\n\r\n\r\nconst logoPath = 'https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_1-5bdc75aaebeb75dc7ae79426ddd9be3b2be1e342510f8202baf6bffa71d7f5c4.svg'\r\n\r\n\r\n\r\n\r\n\r\nconst Navigation = ({ isAuth, found_movies, searchMoviesDropdown, found_movies_dropdown, setCurrentPage, ...props }) => {\r\n    \r\n    console.log('isAuth=', isAuth);\r\n\r\n    const [value, setValue] = useState('');\r\n    const [dropdown, setVisible] = useState({ visible: false, class: '' });\r\n\r\n    const getQuery = () => {\r\n\r\n        // console.log(query);\r\n        if (value) {\r\n\r\n            setCurrentPage(1);\r\n            setVisible({ visible: false, class: '' });\r\n            console.log('redirect');\r\n            props.history.push('/search/s_query=' + value);\r\n            setValue('');\r\n            // return <Route to={'/search/s_query=' + query} />;\r\n        }\r\n    }\r\n\r\n    const dropDownSearch = (value) => {\r\n        setValue(value);\r\n\r\n        if (value.length > 2) {\r\n            // searchMovies(value);\r\n            searchMoviesDropdown(value);\r\n            setVisible({ visible: true, class: 'visible' });\r\n        } else {\r\n            setVisible({ visible: false, class: '' });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\">\r\n                <NavLink to='/' className='navbar-brand'><img className='logo' src={logoPath} alt='logo' /></NavLink>\r\n                {/* <Navbar.Brand href=\"#home\"></Navbar.Brand> */}\r\n                <Nav className=\"mr-auto\">\r\n\r\n                    {/* <NavItem link='/main' item='Главная' /> */}\r\n             \r\n                        <NavDropdown title=\"Фильмы\" id=\"basic-nav-dropdown\">\r\n                            \r\n                                <NavLink to='/popular-movies'>Популярные</NavLink>\r\n                            \r\n                                <NavLink to='/now-playing'>Смотрят сейчас</NavLink>\r\n                                <NavLink to='/upcoming'>Ожидаемые</NavLink>\r\n                            {/* <NavDropdown.Divider />\r\n                        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item> */}\r\n                        </NavDropdown>\r\n\r\n\r\n                    <NavItem link='/person' item='Люди' />\r\n\r\n                    {/* {isAuth && */}\r\n                        <NavItem link='/profile' item='Профиль' />\r\n                    {/* }\r\n                    {isAuth\r\n                        ? '' */}\r\n                        : <NavItem link='/login' item='Вход' />\r\n                    {/* } */}\r\n\r\n                </Nav>\r\n\r\n            </Navbar>\r\n            <div className='search_form'>\r\n                <form onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    getQuery();\r\n                }}>\r\n                    <label>\r\n                        <input type=\"text\" placeholder=\"Название фильма\" className=\"mr-sm-2\" onChange={(e) => {\r\n                            dropDownSearch(e.target.value);\r\n                        }} value={value} />\r\n                        <button variant=\"outline-light\">Search</button>\r\n                        <div className='dropdown_search_container'>\r\n                            <div className={`dropdown_search ${dropdown.class}`}>\r\n\r\n                                {dropdown.visible && found_movies_dropdown &&\r\n                                    found_movies_dropdown.map((item, index) => <div key={index}>\r\n                                        <img className='border' src={item.poster_path ? `https://image.tmdb.org/t/p/w92/${item.poster_path}` : '/img/no_poster.jpg'}\r\n                                            alt='п' />\r\n                                        {item.title}\r\n                                    </div>)\r\n                                }\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </label>\r\n\r\n                </form>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    found_movies: state.found_movies.found_movies,\r\n    found_person: state.found_movies.found_person,\r\n    found_movies_dropdown: state.found_movies.found_movies_dropdown\r\n})\r\n\r\n\r\nexport default compose(connect(mapStateToProps, { searchMoviesDropdown, setCurrentPage }), withRouter)(Navigation);\r\n// export default Navigation;","import React from 'react';\r\nimport '../../styles/header.css'\r\nimport { Container } from 'react-bootstrap';\r\nimport Navigation from '../nav/Nav';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst Header = ({ isAuth }) => {\r\n    return (\r\n\r\n        <div className='main_header bg-dark'>\r\n            <Container>\r\n\r\n                <Navigation isAuth={isAuth} />\r\n\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => (\r\n    {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n)\r\n\r\nconst HeaderContainer = compose(connect(mapStateToProps, {\r\n    \r\n}), withRouter)(Header);\r\n\r\nexport default HeaderContainer;","import React, { useEffect } from 'react';\r\nimport './../../../styles/popular_movies.css';\r\nimport { connect } from 'react-redux';\r\nimport { getGenres } from '../../../redux/genres_reducer';\r\nimport { getDiscoverMovies, setRequestData, setRequestDataGenreIds, discoverMoviesIsFetching } from '../../../redux/discover_reducer';\r\nimport { setCurrentPage } from '../../../redux/pagination_reducer';\r\nimport { rateMovie, getAccountStates, rateMovieDelete } from '../../../redux/movie_reducer';\r\nimport FilterPanel from './FilterPanel';\r\nimport MoviesList from './MoviesList';\r\nimport PaginationButtons from './../../pagination/PaginationButtons';\r\n\r\n// временно\r\nimport { getDetails } from './../../../redux/account_reducer';\r\nimport { authentication } from './../../../redux/auth_reducer';\r\n///////\r\n\r\n\r\nconst PopularMovies = (\r\n    {\r\n        discover_movies,\r\n        getDiscoverMovies,\r\n        discover_movies_is_fetching,\r\n        popular_movies,\r\n        popular_movies_isFetching,\r\n        getGenres,\r\n        genres,\r\n        setRequestData,\r\n        request,\r\n        setRequestDataGenreIds,\r\n        discoverMoviesIsFetching,\r\n        isAuth,\r\n        rateMovie,\r\n        session_id,\r\n        getAccountStates,\r\n        your_rate,\r\n        rateMovieDelete,\r\n        getDetails,\r\n        authentication,\r\n        ...props\r\n    }) => {\r\n\r\n\r\n        console.log('props=', props);\r\n\r\n// Временно\r\n    useEffect(() => {\r\n        authentication();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(session_id) getDetails(session_id);\r\n    }, [session_id]);\r\n///////////////////////\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n       \r\n        getDiscoverMovies(request, props.current_page);\r\n    }, [props.current_page, request.release_date_gte]);\r\n\r\n    useEffect(() => {\r\n        getGenres();\r\n\r\n        setRequestData(\r\n            {\r\n                sort_by: 'popularity.desc',\r\n                release_date_gte: '',\r\n                release_date_lte: '',\r\n                btn_is_visible: false\r\n            }\r\n        );\r\n        setRequestDataGenreIds(null, false);\r\n    }, []);\r\n\r\n\r\n    const setRateMovie = ({ id, session_id, rate }) => {\r\n        if (isAuth) rateMovie({ id, session_id, rate });\r\n    }\r\n\r\n    const accountStates = ({ id, session_id }) => {\r\n        if(isAuth) getAccountStates({ id, session_id });\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='tittle'>\r\n                <h5>Популярные фильмы на <a href='https://www.themoviedb.org' target='_blank'> TMDb</a>:</h5>\r\n            </div>\r\n            <div className='sides_wrapper'>\r\n                <div className='left_side'>\r\n                    <FilterPanel\r\n                        request={request}\r\n                        setRequestData={setRequestData}\r\n                        genres={genres}\r\n                        setRequestDataGenreIds={setRequestDataGenreIds}\r\n                        getDiscoverMovies={getDiscoverMovies}\r\n                        {...props}\r\n                    />\r\n                </div>\r\n                <div className='right_side border'>\r\n                    <PaginationButtons {...props} />\r\n                    <hr />\r\n                    <MoviesList\r\n                        discover_movies_is_fetching={discover_movies_is_fetching}\r\n                        data={discover_movies}\r\n                        isAuth={isAuth}\r\n                        setRateMovie={setRateMovie}\r\n                        session_id={session_id}\r\n                        accountStates={accountStates}\r\n                        your_rate={your_rate}\r\n                        rateMovieDelete={rateMovieDelete}\r\n                        {...props}\r\n                    />\r\n                    <hr />\r\n                    <PaginationButtons {...props} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    genres: state.genres.genres,\r\n    request: state.discover.request,\r\n    discover_movies_is_fetching: state.discover.discover_movies_is_fetching,\r\n    discover_movies: state.discover.discover_movies,\r\n    current_page: state.pagination.current_page,\r\n    total_pages: state.pagination.total_pages,\r\n    total_results: state.pagination.total_results,\r\n    isAuth: state.auth.isAuth,\r\n    session_id: state.auth.session_id,\r\n    your_rate: state.movies.your_rate,\r\n\r\n\r\n    session_id: state.auth.session_id\r\n\r\n})\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        getGenres,\r\n        setCurrentPage,\r\n        setRequestData,\r\n        setRequestDataGenreIds,\r\n        getDiscoverMovies,\r\n        discoverMoviesIsFetching,\r\n        rateMovie,\r\n        getAccountStates,\r\n        rateMovieDelete,\r\n        getDetails,\r\n        authentication\r\n    })(PopularMovies);","import React from 'react';\r\nimport './../../styles/footer.css'\r\nimport { NavLink } from 'react-bootstrap';\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='footer'>\r\n           \r\n            <a href='https://www.themoviedb.org' target='_blank'> Источник данных о фильмах</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n   return (props) => {\r\n        return <React.Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n   }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport './styles/global.css';\r\nimport HeaderContainer from './components/header/HeaderContainer';\r\nimport PopularMovies from './components/mainPage/moviesList/PopularMoviesContainer';\r\nimport Footer from './components/footer/Footer';\r\nimport {withSuspense} from './Lazy/withSuspense';\r\n\r\n\r\nimport { getAuth, authentication } from './redux/auth_reducer';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n\r\n//////\r\n\r\nconst Login = React.lazy(() => import('./components/login/LoginContainer'));\r\nconst Profile = React.lazy(() => import('./components/profilePage/ProfilePageContainer'));\r\nconst MovieInfo = React.lazy(() => import('./components/mainPage/moviesInfo/MovieInfoContainer'));\r\nconst PeopleInfo = React.lazy(() => import('./components/mainPage/peopleInfo/PeopleInfoContainer'));\r\nconst MovieReleases = React.lazy(() => import('./components/mainPage/moviesInfo/MovieReleasesContainer'));\r\nconst MovieCasts = React.lazy(() => import('./components/mainPage/moviesInfo/MovieCasts'));\r\nconst MovieCrew = React.lazy(() => import('./components/mainPage/moviesInfo/MovieCrew'));\r\nconst PeopleFilmography = React.lazy(() => import('./components/mainPage/peopleInfo/PeopleFilmography'));\r\nconst PeopleCrew = React.lazy(() => import('./components/mainPage/peopleInfo/PeopleCrew'));\r\nconst Search = React.lazy(() => import('./components/mainPage/SearchContainer'));\r\nconst NowPlaying = React.lazy(() => import('./components/mainPage/moviesList/NowPlayingContainer'));\r\nconst Upcoming = React.lazy(() => import('./components/mainPage/moviesList/UpcomingContainer'));\r\nconst Person = React.lazy(() => import('./components/mainPage/PersonContainer'));\r\n\r\n\r\n\r\n\r\nlet App = ({ fetchWeather, ...props }) => {\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <HeaderContainer />\r\n\r\n      <Container className=\"justify-content-md-center\">\r\n        {/* <Row className=\"justify-content-md-center\"> */}\r\n        {/* <Col> */}\r\n\r\n        <Switch>\r\n          <Route exact path='/' render={() => <Redirect to={'/popular-movies'} />} />\r\n\r\n          <Route exact path='/movie-info/:movie_id?' render={withSuspense(MovieInfo)} />\r\n          <Route exact path='/movie-releases/:movie_id?' render={withSuspense(MovieReleases)} />\r\n          <Route exact path='/casts/:movie_id?' render={withSuspense(MovieCasts)} />\r\n          <Route exact path='/crew/:movie_id?' render={withSuspense(MovieCrew)} />\r\n          <Route exact path='/people-filmography/:people_id?' render={withSuspense(PeopleFilmography)} />\r\n          <Route exact path='/people-crew/:people_id?' render={withSuspense(PeopleCrew)} />\r\n          <Route exact path='/people/:people_id?' render={withSuspense(PeopleInfo)} />\r\n          <Route exact path='/search/:s_query=:s_query?' render={withSuspense(Search)} />\r\n          <Route exact path='/login' render={withSuspense(Login)} />\r\n          <Route exact path='/profile' render={withSuspense(Profile)} />\r\n\r\n          <Route exact path='/popular-movies' render={() => <PopularMovies />} />\r\n          <Route exact path='/now-playing' render={withSuspense(NowPlaying)} />\r\n          <Route exact path='/upcoming' render={withSuspense(Upcoming)} />\r\n          <Route exact path='/person' render={withSuspense(Person)} />\r\n\r\n        </Switch>\r\n\r\n\r\n        {/* </Col> */}\r\n\r\n        {/* </Row> */}\r\n\r\n      </Container>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst getStateToProps = (state) => (\r\n  {\r\n    request_token: state.auth.request_token\r\n    // popular_movie: state.movie.popular_movie\r\n  }\r\n)\r\n\r\n\r\n\r\n\r\n\r\n// export default App;\r\n\r\nexport default App = compose(connect(getStateToProps, {\r\n  getAuth,\r\n  authentication\r\n}), withSuspense)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport auth_reducer from './auth_reducer';\r\nimport movie_reducer from './movie_reducer';\r\nimport people_reducer from './people_reducer';\r\nimport search_reducer from './search_reducer';\r\nimport genres_reducer from './genres_reducer';\r\nimport discover_reducer from './discover_reducer';\r\nimport pagination_reducer from './pagination_reducer';\r\nimport account_reducer from './account_reducer';\r\n\r\n\r\n\r\n\r\nlet redusers = combineReducers({\r\n    auth: auth_reducer,\r\n    movies: movie_reducer,\r\n    people: people_reducer,\r\n    found_movies: search_reducer,\r\n    genres: genres_reducer,\r\n    discover: discover_reducer,\r\n    pagination: pagination_reducer,\r\n    account: account_reducer\r\n});\r\n\r\n\r\nlet store = createStore(redusers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/reduxStore';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import * as axios from 'axios';\r\n\r\nconst api_key = 'api_key='+process.env.REACT_APP_TOKEN;\r\n\r\n\r\nconst instanse = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3/authentication/'\r\n});\r\n\r\n\r\nexport const auth_api = {\r\n\r\n    getToken() {\r\n        return instanse\r\n                .get('token/new?'+api_key)\r\n                .then(response => response.data.request_token)\r\n    },\r\n\r\n    getAuth(request_body) {\r\n       \r\n        return instanse\r\n                .post('token/validate_with_login?'+api_key, request_body)\r\n                .then(response => response)\r\n    },\r\n\r\n\r\n    createSession(request_body) {\r\n\r\n       \r\n        request_body = {\r\n            \"request_token\": request_body\r\n        }\r\n\r\n        console.log('запрос на createSession', request_body );\r\n\r\n        return instanse\r\n                .post('session/new?'+api_key, request_body)\r\n                .then(response => response)\r\n    }\r\n}\r\n\r\n\r\n//............................... ЗАПРОСЫ ..........................\r\n\r\n/*\r\nGenres - список жанров\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n","import { auth_api } from '../api/auth_api';\r\n\r\nconst SET_REQUEST_TOKEN = 'SET_REQUEST_TOKEN';\r\nconst AUTH_IS_SUCCES = 'AUTH_IS_SUCCES';\r\nconst SET_SESSION_ID = 'SET_SESSION_ID';\r\n\r\nlet initialState = {\r\n    request_token: null,\r\n    username: null,\r\n    session_id: null,\r\n    isAuth: false\r\n};\r\n\r\n\r\nconst auth_reducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case SET_REQUEST_TOKEN:\r\n            return {\r\n                ...state,\r\n                request_token: action.payload\r\n            };\r\n        case AUTH_IS_SUCCES:\r\n            return {\r\n                ...state,\r\n                username: action.payload   \r\n            };\r\n        case SET_SESSION_ID:\r\n            return {\r\n                ...state,\r\n                session_id: action.payload,\r\n                isAuth: true\r\n            };\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const setTokenAC = (payload) => ( {type: SET_REQUEST_TOKEN, payload} );\r\nexport const auth_is_success = (payload) => ( {type: AUTH_IS_SUCCES, payload} );\r\nexport const setSessionId = (payload) => ( {type: SET_SESSION_ID, payload} );\r\n\r\n\r\n\r\n\r\nexport const authentication = (data) => (dispatch) => {\r\n    \r\n        return auth_api.getToken()\r\n            .then(request_token => {\r\n               \r\n                dispatch(setTokenAC(request_token));\r\n\r\n                console.log('1-getToken',{request_token});\r\n\r\n                // let request_body = {\r\n                //     \"username\": data.username,\r\n                //     \"password\": data.password,\r\n                //     \"request_token\": request_token\r\n                // }\r\n\r\n\r\n                let request_body = {\r\n                    \"username\": 'ZhVA',\r\n                    \"password\": 'vadik250783',\r\n                    \"request_token\": request_token\r\n                }\r\n\r\n                dispatch(getAuth(request_body));\r\n                    \r\n            })\r\n}\r\n\r\n\r\n\r\nexport const getAuth = (request_body) => (dispatch) => {\r\n    \r\n    return auth_api.getAuth(request_body)\r\n        .then(response => {\r\n            console.log('2-getAuth=', response.data);\r\n            dispatch(auth_is_success(request_body.username));\r\n\r\n            dispatch(createSession(response.data.request_token));\r\n\r\n        })\r\n}\r\n\r\nexport const createSession = (request_body) => (dispatch) => {\r\n    \r\n    return auth_api.createSession(request_body)\r\n        .then(response => {\r\n            console.log('3-createSession=', response.data);\r\n            \r\n            dispatch(setSessionId(response.data.session_id));\r\n\r\n        })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default auth_reducer;","import * as axios from 'axios';\r\n\r\nconst api_key = 'api_key='+process.env.REACT_APP_TOKEN;\r\n\r\n\r\nconst instanse = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3/discover/'\r\n});\r\n\r\n\r\n\r\n\r\nexport const discover_api = {\r\n\r\n    discover_movies(request, currentPage=1) {\r\n\r\n        const {sort_by, release_date_gte, release_date_lte, genres_ids} = request;\r\n        // console.log('params=', request);\r\n\r\n        const params = '&language=ru-RU&sort_by='+sort_by+'&include_adult=false&include_video=false&with_genres='+genres_ids.join(',')\r\n        +'&release_date.gte='+release_date_gte+'&release_date.lte='+release_date_lte+'&page='+currentPage;\r\n        return instanse\r\n                .get('movie?' + api_key + params)\r\n                .then(response => response.data)\r\n    }\r\n}\r\n\r\n\r\n/*\r\nпоказываются в кинотеатрах Германии на этой неделе\r\nhttps://api.themoviedb.org/3/discover/movie?api_key=<<api_key>>&language=de-DE&region=DE&release_date.gte=2016-11-16&release_date.lte=2016-12-02&with_release_type=2|3\r\n\r\n\r\n\r\nGET /movie/upcoming - список предстоящих фильмов в кинотеатрах\r\n\r\n\r\n*/","export const updateObjectInArray = (items, itemId) => { \r\n    if(!itemId) return [];\r\n    const id = items.length > 0 ? items.indexOf(itemId) : -1;\r\n    return id === -1 ? [...items, itemId] : items.filter(g => g !== itemId);\r\n}\r\n\r\n\r\n\r\n","import { discover_api } from '../api/discover_api';\r\nimport {setTotalPages, setCurrentPage} from './pagination_reducer';\r\nimport { updateObjectInArray } from './../utils/genres_reducer_helper';\r\n\r\n\r\n\r\n\r\nconst FETCHING_DISCOVER_MOVIES = 'FETCHING_DISCOVER_MOVIES';\r\nconst SET_REQUEST_DATA= 'SET_REQUEST_DATA';\r\nconst SET_REQUEST_DATA_GENRE_IDS = 'SET_REQUEST_DATA_GENRE_IDS';\r\nconst DISCOVER_MOVIES_IS_FETCHING = 'DISCOVER_MOVIES_IS_FETCHING';\r\n\r\n\r\n\r\n\r\nlet initialState = {\r\n    discover_movies: [],\r\n    discover_movies_is_fetching: false,\r\n    request: {\r\n        sort_by: 'popularity.desc',\r\n        release_date_gte: '',\r\n        release_date_lte: '',\r\n        genres_ids: [],\r\n        btn_is_visible: false\r\n    }\r\n    \r\n};\r\n\r\n\r\n\r\nconst discover_reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FETCHING_DISCOVER_MOVIES:\r\n            return {\r\n                ...state,\r\n                discover_movies: action.payload\r\n            };\r\n\r\n        case DISCOVER_MOVIES_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                discover_movies_is_fetching: action.payload\r\n            };\r\n\r\n\r\n            case SET_REQUEST_DATA: {\r\n                return {\r\n                    ...state,\r\n                    request: {\r\n                        ...state.request,\r\n                        ...action.payload\r\n                    }\r\n                    \r\n                };\r\n                \r\n            }\r\n    \r\n            case SET_REQUEST_DATA_GENRE_IDS: \r\n                return {\r\n                    ...state,\r\n                    request: {\r\n                        ...state.request,\r\n                        genres_ids: updateObjectInArray(state.request.genres_ids, action.payload),\r\n                        btn_is_visible: action.btn_is_visible\r\n                    }\r\n                };\r\n     \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst genresFetching = (payload) => ({ type: FETCHING_DISCOVER_MOVIES, payload });\r\nconst discoverMoviesIsFetchingAC = (payload) => ({ type: DISCOVER_MOVIES_IS_FETCHING, payload });\r\nconst setRequestDataAC = (payload) => ({ type: SET_REQUEST_DATA, payload });\r\nconst setRequestDataGenreIdsAC = (payload, btn_is_visible) => ({ type: SET_REQUEST_DATA_GENRE_IDS, payload, btn_is_visible });\r\n\r\n\r\nexport const discoverMoviesIsFetching = (payload) => (dispatch) => {\r\n    dispatch(discoverMoviesIsFetchingAC(payload));\r\n}\r\n\r\nexport const setRequestData = (payload) => (dispatch) => {\r\n    dispatch(setRequestDataAC(payload));\r\n}\r\n\r\nexport const setRequestDataGenreIds = (payload, btn_is_visible) => (dispatch) => {\r\n    dispatch(setRequestDataGenreIdsAC(payload, btn_is_visible));\r\n}\r\n\r\nexport const getDiscoverMovies = (request, currentPage=1) => (dispatch) => {\r\n    discover_api.discover_movies(request, currentPage)\r\n        .then(response => {\r\n\r\n            console.log('discover_movies ', response);\r\n            const payload = {\r\n                total_results: response.total_results,\r\n                total_pages: response.total_pages\r\n            }\r\n    \r\n            dispatch(setTotalPages(payload));\r\n            \r\n            dispatch(discoverMoviesIsFetchingAC(true));\r\n\r\n            dispatch(genresFetching(response.results));\r\n        })\r\n}\r\n\r\n\r\n\r\n\r\nexport default discover_reducer;","import * as axios from 'axios';\r\n\r\n\r\nconst api_key = 'api_key='+process.env.REACT_APP_TOKEN;\r\n\r\n\r\n\r\nconst instanse = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3/movie/'\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport const movie_api = {\r\n\r\n    getPopularMovies(current_page) {\r\n        const params = '&language=ru-RU&page='+current_page;\r\n        return instanse\r\n                .get('top_rated?' + api_key + params)\r\n                .then(response => response.data)\r\n    },\r\n\r\n    getDetails(movie_id) {\r\n        const params = '&language=ru-RU&append_to_response=videos,images';\r\n        return instanse\r\n                .get(movie_id + '?' + api_key + params)\r\n                .then(response => response.data)\r\n    },\r\n\r\n    // получить список актеров, съемочной комманды\r\n    getCredits(movie_id) {\r\n        return instanse\r\n                .get(movie_id + '/credits?' + api_key)\r\n                .then(response => response.data)\r\n    },\r\n\r\n    getReleases(movie_id) {\r\n        return instanse\r\n                .get(movie_id + '/release_dates?' + api_key)\r\n                .then(response => response.data)\r\n                \r\n    },\r\n\r\n    rateMovie({id, session_id, rate}) {\r\n        return instanse\r\n                .post(id + '/rating?' + api_key + '&session_id=' + session_id, {'value': rate})\r\n                .then(response => response.data)\r\n                \r\n    },\r\n    \r\n    rateMovieDelete({id, session_id}) {\r\n        return instanse\r\n                .delete(id + '/rating?' + api_key + '&session_id=' + session_id)\r\n                .then(response => response.data)\r\n                \r\n    },\r\n\r\n    getAccountStates({session_id, id}) {\r\n        console.log('!!!!1=', session_id, id);\r\n        return instanse\r\n                .get(id+'/account_states?'+api_key+'&session_id='+session_id)\r\n                .then(response => response.data)\r\n    }\r\n}\r\n\r\n\r\n/*\r\nпоказываются в кинотеатрах Германии на этой неделе\r\nhttps://api.themoviedb.org/3/discover/movie?api_key=<<api_key>>&language=de-DE&region=DE&release_date.gte=2016-11-16&release_date.lte=2016-12-02&with_release_type=2|3\r\n\r\n\r\n\r\nGET /movie/upcoming - список предстоящих фильмов в кинотеатрах\r\n\r\n\r\n*/","import * as axios from 'axios';\r\n\r\nconst api_key = 'api_key='+process.env.REACT_APP_TOKEN;\r\n\r\n\r\nconst instanse = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3/configuration/'\r\n});\r\n\r\n\r\n\r\n\r\nexport const config_api = {\r\n\r\n    getCountries() {\r\n        return instanse\r\n                .get('/countries?' + api_key)\r\n                .then(response => response.data)\r\n                \r\n    }\r\n}\r\n\r\n\r\n/*\r\nGET /movie/upcoming - список предстоящих фильмов в кинотеатрах\r\n\r\n\r\n*/","import { movie_api } from '../api/movie_api';\r\nimport { config_api } from '../api/config_api';\r\n\r\nimport {setTotalPages, setCurrentPage} from './pagination_reducer';\r\n\r\nimport {getRatedMovies} from './account_reducer';\r\n\r\n\r\nconst FETCHING_POPULAR_MOVIES = 'FETCHING_POPULAR_MOVIES';\r\nconst MOVIE_INFO_IS_FETCHING = 'MOVIE_INFO_IS_FETCHING';\r\n// const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst FETCHING_MOVIE_DETAILES = 'FETCHING_MOVIE_DETAILES';\r\nconst FETCHING_CREDITS = 'FETCHING_CREDITS';\r\nconst FETCHING_RELEASES = 'FETCHING_RELEASES';\r\nconst FETCHING_GENRE = 'FETCHING_GENRE';\r\nconst SET_YOUR_RATE = 'SET_YOUR_RATE';\r\n\r\n\r\n\r\nlet initialState = {\r\n    popular_movies: [],\r\n    popular_movies_isFetching: false,\r\n    total_results: 0,\r\n    total_pages: 0,\r\n    current_page: 1,\r\n    movie_info: {},\r\n    movie_info: false,\r\n    credits: [],\r\n    credits_isFetching: false,\r\n    releases: [],\r\n    releases_isFetching: false,\r\n    genre: [],\r\n    your_rate: null\r\n};\r\n\r\n\r\n\r\nconst movie_reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_YOUR_RATE:\r\n            return {\r\n                ...state,\r\n                your_rate: action.payload\r\n            };\r\n\r\n        case FETCHING_GENRE:\r\n            return {\r\n                ...state,\r\n                genre: action.payload\r\n            };\r\n\r\n        case FETCHING_POPULAR_MOVIES:\r\n            return {\r\n                ...state,\r\n                popular_movies: action.payload.popular_movies,\r\n                popular_movies_isFetching: true\r\n            };\r\n\r\n        // case MOVIES_IS_FETCHING:\r\n        //     return {\r\n        //         ...state,\r\n        //         isFetching: true\r\n        //     };\r\n\r\n        // case SET_CURRENT_PAGE:\r\n        //     return {\r\n        //         ...state,\r\n        //         current_page: action.payload\r\n        //     };\r\n\r\n\r\n        case FETCHING_MOVIE_DETAILES:\r\n            return {\r\n                ...state,\r\n                movie_info: action.payload\r\n            };\r\n\r\n        case FETCHING_CREDITS:\r\n            return {\r\n                ...state,\r\n                credits: action.payload,\r\n                credits_isFetching: true\r\n            };\r\n\r\n        case FETCHING_RELEASES:\r\n            return {\r\n                ...state,\r\n                releases: action.payload,\r\n                releases_isFetching: true\r\n            };\r\n\r\n\r\n        case MOVIE_INFO_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                movie_info_isFetching: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst fetchingPopularMoviesAC = (payload) => ({ type: FETCHING_POPULAR_MOVIES, payload });\r\n// const moviesIsFetching = () => ( {type: MOVIES_IS_FETCHING} );\r\n// const setCurrentPageAC = (payload) => ({ type: SET_CURRENT_PAGE, payload });\r\nconst fetchingMovieDetailes = (payload) => ({ type: FETCHING_MOVIE_DETAILES, payload });\r\nconst genreFetching = (payload) => ({ type: FETCHING_GENRE, payload });\r\nconst setCreditsAC = (payload) => ({ type: FETCHING_CREDITS, payload });\r\nconst setReleasesAC = (payload) => ({ type: FETCHING_RELEASES, payload });\r\nconst setYourRate = (payload) => ({ type: SET_YOUR_RATE, payload });\r\nconst movie_info_isFetching = () => ({ type: MOVIE_INFO_IS_FETCHING });\r\n\r\n\r\n\r\nexport const getGenres = () => (dispatch) => {\r\n\r\n    movie_api.getPopularMovies(1)\r\n        .then(response => {\r\n\r\n            console.log('movie ', response);\r\n\r\n            const payload = {\r\n                popular_movies: response.results,\r\n                total_results: response.total_results,\r\n                total_pages: response.total_pages\r\n            }\r\n            dispatch(fetchingPopularMoviesAC(payload));\r\n            // dispatch(moviesIsFetching());\r\n        })\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const fetchingPopularMovies = (current_page) => (dispatch) => {\r\n\r\n    movie_api.getPopularMovies(current_page)\r\n        .then(response => {\r\n\r\n            console.log('movie ', response);\r\n            \r\n\r\n            const payload = {\r\n                total_results: response.total_results,\r\n                total_pages: response.total_pages\r\n            }\r\n\r\n            // dispatch(setCurrentPage(current_page));\r\n            dispatch(setTotalPages(payload));\r\n\r\n            payload.popular_movies = response.results;\r\n           \r\n            dispatch(fetchingPopularMoviesAC(payload));\r\n\r\n        })\r\n}\r\n\r\n\r\n\r\n// export const setCurrentPage = (current_page) => (dispatch) => {\r\n\r\n//     movie_api.getPopularMovies(current_page)\r\n//         .then(response => {\r\n\r\n//             console.log('movie ', response);\r\n\r\n//             const payload = {\r\n//                 popular_movies: response.results,\r\n//                 total_results: response.total_results,\r\n//                 total_pages: response.total_pages\r\n//             }\r\n//             dispatch(fetchingPopularMoviesAC(payload));\r\n//         })\r\n// }\r\n\r\n\r\nexport const getDetails = (movie_id) => async (dispatch) => {\r\n\r\n    await movie_api.getDetails(movie_id)\r\n        .then(response => {\r\n            console.log('movie details', response);\r\n            console.log('video', response.videos.results);\r\n            dispatch(fetchingMovieDetailes(response));\r\n            dispatch(movie_info_isFetching());\r\n\r\n        })\r\n}\r\n\r\n\r\nexport const rateMovie = (request_body) => async (dispatch) => {\r\n\r\n    // request_body = {id, session_id, rate}\r\n\r\n    await movie_api.rateMovie(request_body)\r\n        .then(response => {\r\n            console.log('rating', response);\r\n            // console.log('rating=', request_body.rate);\r\n           \r\n            // let payload = {\r\n            //     session_id: request_body.session_id,\r\n            //     id: request_body.id\r\n            // };\r\n            // console.log('!!!!1=', payload);\r\n            \r\n            dispatch(setYourRate(request_body.rate));\r\n            \r\n        })\r\n}\r\n\r\nexport const rateMovieDelete = (request_body) => async (dispatch) => {\r\n\r\n    await movie_api.rateMovieDelete(request_body)\r\n        .then(response => {\r\n            console.log('rating delete', response);       \r\n            dispatch(setYourRate(null));  \r\n\r\n            // dispatch(getRatedMovies(null));    \r\n        })\r\n}\r\n\r\n\r\n\r\nexport const getCredits = (movie_id) => (dispatch) => {\r\n\r\n    movie_api.getCredits(movie_id)\r\n        .then(response => {\r\n\r\n            console.log('Credits', response);\r\n\r\n            dispatch(setCreditsAC(response));\r\n\r\n        })\r\n}\r\n\r\n\r\nexport const getAccountStates = (payload) => (dispatch) => {\r\n\r\n    movie_api.getAccountStates(payload)\r\n        .then(response => {\r\n\r\n            console.log('AccountStates', response);\r\n            // console.log('AccountStates.rate=', response.rated.value);\r\n\r\n            dispatch(setYourRate(response.rated.value));\r\n\r\n        })\r\n}\r\n\r\n\r\n\r\nexport const getReleases = (movie_id) => async (dispatch) => {\r\n\r\n    let releases = await movie_api.getReleases(movie_id);\r\n\r\n    console.log('Releases', releases.results);\r\n\r\n\r\n    let countries = await config_api.getCountries();\r\n\r\n\r\n    let payload = {};\r\n\r\n\r\n    countries.map(i => {\r\n        payload[i.iso_3166_1] = i.english_name;\r\n        return payload;\r\n    })\r\n\r\n    if (countries.length>0 && releases.results) {\r\n        releases.results.map(i => {\r\n            i.iso_3166_1 = payload[i.iso_3166_1]\r\n        })\r\n    }\r\n\r\n\r\n\r\n    console.log('releases', releases);\r\n\r\n    dispatch(setReleasesAC(releases.results));\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default movie_reducer;","import * as axios from 'axios';\r\n\r\nconst api_key = 'api_key='+process.env.REACT_APP_TOKEN;\r\n\r\n\r\nconst instanse = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3/'\r\n});\r\n\r\n\r\nexport const account_api = {\r\n\r\n    getDetails(session_id) {\r\n        return instanse\r\n                .get('account?'+api_key+'&session_id='+session_id)\r\n                .then(response => response.data)\r\n    },\r\n\r\n\r\n    getRatedMovies({session_id, account_id, page=1}) {\r\n        return instanse\r\n                .get('account/'+account_id+'/rated/movies?'+api_key+'&language=ru-RU&session_id='+session_id+'&sort_by=created_at.asc&page='+page)\r\n                .then(response => response.data)\r\n    }\r\n}\r\n\r\n\r\n","import { account_api } from '../api/account_api';\r\n\r\nconst SET_USER = 'SET_USER';\r\nconst SET_RATED_MOVIED = 'SET_RATED_MOVIED';\r\n\r\n\r\nlet initialState = {\r\n    user_name: null,\r\n    account_id: null,\r\n    rated_movies: []\r\n};\r\n\r\n\r\nconst account_reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER:\r\n            return {\r\n                ...state,\r\n                user_name: action.payload.username,\r\n                account_id: action.payload.id\r\n            };\r\n        case SET_RATED_MOVIED:\r\n            return {\r\n                ...state,\r\n                rated_movies: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const setUser = (payload) => ({ type: SET_USER, payload });\r\nexport const setRatedMoviesAC = (payload) => ({ type: SET_RATED_MOVIED, payload });\r\n\r\n\r\n\r\n\r\n\r\nexport const getDetails = (session_id) => (dispatch) => {\r\n\r\n    return account_api.getDetails(session_id)\r\n        .then(response => {\r\n\r\n            console.log('Account Details', response);\r\n        \r\n            dispatch(setUser(response));\r\n\r\n            const account_id = response.id;\r\n            console.log('id=', account_id);\r\n            \r\n            \r\n            // dispatch(getRatedMovies({session_id, account_id}));\r\n\r\n\r\n        })\r\n}\r\n\r\nexport const getRatedMovies = (paload) => (dispatch) => {\r\n\r\n    return account_api.getRatedMovies(paload)\r\n        .then(response => {\r\n\r\n            console.log('Rated Movies', response.results);\r\n        \r\n            dispatch(setRatedMoviesAC(response.results));\r\n\r\n        })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default account_reducer;","import * as axios from 'axios';\r\n\r\nconst api_key = 'api_key='+process.env.REACT_APP_TOKEN;\r\n\r\n\r\nconst instanse = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3/genre/'\r\n});\r\n\r\n\r\n\r\n\r\nexport const genres_api = {\r\n\r\n    getGenres() {\r\n        const params = '&language=ru-RU';\r\n        return instanse\r\n                .get('movie/list?' + api_key + params)\r\n                .then(response => response.data)\r\n    }\r\n}\r\n\r\n\r\n/*\r\nпоказываются в кинотеатрах Германии на этой неделе\r\nhttps://api.themoviedb.org/3/discover/movie?api_key=<<api_key>>&language=de-DE&region=DE&release_date.gte=2016-11-16&release_date.lte=2016-12-02&with_release_type=2|3\r\n\r\n\r\n\r\nGET /movie/upcoming - список предстоящих фильмов в кинотеатрах\r\n\r\n\r\n*/","import { genres_api } from '../api/genres_api';\r\n\r\n\r\nconst FETCHING_GENRES = 'FETCHING_GENRES';\r\n\r\n\r\nlet initialState = {\r\n    genres: []\r\n};\r\n\r\n\r\nconst genres_reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FETCHING_GENRES:\r\n            return {\r\n                ...state,\r\n                genres: action.payload, \r\n            };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst genresFetching = (payload) => ({ type: FETCHING_GENRES, payload });\r\n\r\n\r\nexport const getGenres = () => (dispatch) => {\r\n    genres_api.getGenres()\r\n        .then(response => {\r\n\r\n            // console.log('genres ', response.genres);\r\n\r\n            dispatch(genresFetching(response.genres));\r\n        })\r\n}\r\n\r\n\r\n\r\n\r\nexport default genres_reducer;","import * as axios from 'axios';\r\n\r\nconst api_key = 'api_key='+process.env.REACT_APP_TOKEN;\r\n\r\n\r\nconst instanse = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3/search/'\r\n    // baseURL: 'https://api.themoviedb.org/3/search/'\r\n});\r\n\r\n\r\n\r\n\r\nexport const search_api = {\r\n\r\n    searchMulti(query, currentPage) {\r\n        // const page=1;\r\n        // const year = 0;\r\n        // const params = '&language=ru-RU&query='+query+'&page='+currentPage+'&include_adult=false'+'&year='+year;\r\n        const params = '&language=ru-RU&query='+query+'&page='+currentPage+'&include_adult=false';\r\n        return instanse\r\n                .get('multi?' + api_key + params)\r\n                .then(response => response.data)\r\n    }\r\n}\r\n\r\n\r\n/*\r\nGET /movie/upcoming - список предстоящих фильмов в кинотеатрах\r\n\r\n\r\n*/","import { search_api } from '../api/search_api';\r\nimport { setTotalPages } from './pagination_reducer';\r\n\r\n\r\n\r\nconst SET_FOUND_MULTI = 'SET_FOUND_MULTI';\r\nconst SET_FOUND_MOVIES_DROPDOWN = 'SET_FOUND_MOVIES_DROPDOWN';\r\n\r\n\r\n\r\n\r\nlet initialState = {\r\n    found_movies: [],\r\n    found_person: [],\r\n    found_tv: [],\r\n    isFetching: false,\r\n    found_movies_dropdown: []\r\n};\r\n\r\n\r\n\r\nconst search_reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_FOUND_MULTI:\r\n            return {\r\n                ...state,\r\n                found_movies: action.payload.filter(item => item.media_type === 'movie'),\r\n                found_person: action.payload.filter(item => item.media_type === 'person'),\r\n                found_tv: action.payload.filter(item => item.media_type === 'tv'),\r\n                isFetching: true\r\n            };\r\n\r\n        case SET_FOUND_MOVIES_DROPDOWN:\r\n            return {\r\n                ...state,\r\n                found_movies_dropdown: action.payload\r\n            };\r\n\r\n\r\n        // case SET_CURRENT_PAGE:\r\n        //     return {\r\n        //         ...state,\r\n        //         current_page: action.payload\r\n        //     };\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst setFoundMulti = (payload) => ({ type: SET_FOUND_MULTI, payload });\r\nconst setFoundMoviesDropdown = (payload) => ({ type: SET_FOUND_MOVIES_DROPDOWN, payload });\r\n\r\n\r\n\r\nexport const searchMulti = (query, currentPage=1) => (dispatch) => {\r\n\r\n    search_api.searchMulti(query, currentPage)\r\n        .then(response => {\r\n\r\n\r\n            console.log('Found_movie ', response);\r\n\r\n            const payload = {\r\n                total_results: response.total_results,\r\n                total_pages: response.total_pages\r\n            }\r\n    \r\n            dispatch(setTotalPages(payload));\r\n            // dispatch(setCurrentPage(currentPage));\r\n\r\n\r\n            dispatch(setFoundMulti(response.results));\r\n        \r\n        })\r\n}\r\n\r\nexport const searchMoviesDropdown = (query) => (dispatch) => {\r\n\r\n    search_api.searchMulti(query)\r\n        .then(response => {\r\n\r\n            // console.log('Found_movie ', response);\r\n            console.log('Found_movie ', response);\r\n            dispatch(setFoundMoviesDropdown(response.results));\r\n        \r\n        })\r\n}\r\n\r\n\r\n\r\n// export const setCurrentPage = (query) => (dispatch) => {\r\n\r\n//     search_api.searchMovie(query)\r\n//         .then(response => {\r\n\r\n//             console.log('movie ', response);\r\n\r\n//             const payload = {\r\n//                 popular_movies: response.results,\r\n//                 total_results: response.total_results,\r\n//                 total_pages: response.total_pages\r\n//             }\r\n//             dispatch(fetchingPopularMoviesAC(payload));\r\n//             // dispatch(moviesIsFetching());\r\n//             dispatch(setCurrentPageAC(current_page));\r\n//         })\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nexport default search_reducer;","import React, { useEffect } from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport './../../styles/pagination.css';\r\n\r\n\r\nconst PaginationButtons = ({total_pages, setCurrentPage, current_page}) => {\r\n\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     setCurrentPage(1);\r\n    // }, []);\r\n\r\n\r\n\r\n    const selectCurrentPage = (current_page, total_pages) => {\r\n\r\n        if (current_page <= total_pages && current_page >= 1) {\r\n            console.log('current_page ', current_page);\r\n            setCurrentPage(current_page);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='pagination_container'>\r\n            <Pagination>\r\n                {current_page !== 1\r\n                    ? <Pagination.First onClick={() => selectCurrentPage(1, total_pages)} />\r\n                    : <Pagination.First disabled />}\r\n                {current_page !== 1\r\n                    ? <Pagination.Prev onClick={() => selectCurrentPage(current_page-1, total_pages)} />\r\n                    : <Pagination.Prev disabled />\r\n                }\r\n\r\n                <Pagination.Item disabled>{`${current_page} of ${total_pages}`}</Pagination.Item>\r\n\r\n                {current_page !== total_pages\r\n                    ? <Pagination.Next onClick={() => selectCurrentPage(current_page+1, total_pages)} />\r\n                    : <Pagination.Next disabled />}\r\n                {current_page !== total_pages\r\n                    ? <Pagination.Last onClick={() => selectCurrentPage(total_pages, total_pages)} />\r\n                    : <Pagination.Last disabled />}\r\n            </Pagination>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PaginationButtons;","import * as axios from 'axios';\r\n\r\nconst api_key = 'api_key='+process.env.REACT_APP_TOKEN;\r\n\r\n\r\nconst instanse = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3/person/'\r\n});\r\n\r\n\r\n\r\n\r\nexport const people_api = {\r\n\r\n    getPeople(id) {\r\n        const params = '&language=ru-RU&page=';\r\n        return instanse\r\n                .get(id+'?' + api_key + params)\r\n                .then(response => response.data)\r\n    },\r\n\r\n    getFilmography(id) {\r\n        const params = '&language=ru-RU&page=';\r\n        return instanse\r\n                .get(id+'/movie_credits?' + api_key + params)\r\n                .then(response => response.data)\r\n    },\r\n\r\n    getImages(id) {\r\n        return instanse\r\n                .get(id+'/images?' + api_key)\r\n                .then(response => response.data.profiles)\r\n    },\r\n\r\n    getPersonList(page) {\r\n        console.log('page = ', page);\r\n        const params = '&language=ru-RU&page=' + page;\r\n        return instanse\r\n                .get('popular?' + api_key + params)\r\n                .then(response => response.data)\r\n    }\r\n}\r\n\r\n\r\n/*\r\nGET /movie/upcoming - список предстоящих фильмов в кинотеатрах\r\n\r\n\r\n*/","import { people_api } from '../api/people_api';\r\nimport {setTotalPages, setCurrentPage} from './pagination_reducer';\r\n\r\nconst FETCHING_PEOPLE = 'FETCHING_PEOPLE';\r\nconst SET_PERSON_LIST = 'FETCHING_PERSON_LIST';\r\nconst PERSON_LIST_IS_FETCHING = 'PERSON_LIST_IS_FETCHING';\r\n\r\nconst FETCHING_IMAGES = 'FETCHING_IMAGES';\r\nconst FETCHING_PEOPLE_FILMOGRAPHY = 'FETCHING_PEOPLE_FILMOGRAPHY';\r\n\r\n\r\n\r\n\r\nlet initialState = {\r\n    people: [],\r\n    people_isFetching: false,\r\n    filmography: [],\r\n    filmography_isFetching: false,\r\n    people_image: [],\r\n    images_isFetching: false,\r\n    person_list: [],\r\n    person_isFetching: false\r\n};\r\n\r\n\r\n\r\nconst people_reducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case FETCHING_PEOPLE:\r\n            return {\r\n                ...state,\r\n                people: action.payload,\r\n                people_isFetching: true\r\n            };\r\n        case SET_PERSON_LIST:\r\n            return {\r\n                ...state,\r\n                person_list: action.payload\r\n            };\r\n        case PERSON_LIST_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                person_isFetching: action.payload\r\n            };\r\n        case FETCHING_PEOPLE_FILMOGRAPHY:\r\n            return {\r\n                ...state,\r\n                filmography: action.payload,\r\n                filmography_isFetching: true\r\n            };\r\n        case FETCHING_IMAGES:\r\n            return {\r\n                ...state,\r\n                people_image: action.payload,\r\n                images_isFetching: true\r\n            };\r\n\r\n      \r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst fetchingPeople = (payload) => ( {type: FETCHING_PEOPLE, payload} );\r\nconst fetchingPeopleFilmography = (payload) => ( {type: FETCHING_PEOPLE_FILMOGRAPHY, payload} );\r\nconst fetchingImage = (payload) => ( {type: FETCHING_IMAGES, payload} );\r\nconst setPersonList = (payload) => ( {type: SET_PERSON_LIST, payload} );\r\nconst PersonListIsFetching = (payload) => ( {type: PERSON_LIST_IS_FETCHING, payload} );\r\n\r\n\r\n\r\n\r\nexport const getPeople = (people_id) => async (dispatch) => {\r\n\r\n    await people_api.getPeople(people_id)\r\n        .then(response => {\r\n            console.log('people ', response);\r\n            dispatch(fetchingPeople(response));\r\n        })\r\n\r\n    await dispatch(getFilmography(people_id));\r\n\r\n}\r\n\r\nexport const getFilmography = (people_id) => (dispatch) => {\r\n\r\n    people_api.getFilmography(people_id)\r\n        .then(response => {\r\n\r\n            console.log('Filmography ', response);\r\n\r\n            dispatch(fetchingPeopleFilmography(response));\r\n\r\n        })\r\n}\r\n\r\n\r\n\r\nexport const getImages = (people_id) => (dispatch) => {\r\n\r\n    return people_api.getImages(people_id)\r\n        .then(response => {\r\n\r\n            console.log('getImages ', response);\r\n\r\n            dispatch(fetchingImage(response));\r\n\r\n        })\r\n}\r\n\r\n\r\nexport const getPersonList = (page) => (dispatch) => {\r\n    dispatch(PersonListIsFetching(false));\r\n    return people_api.getPersonList(page)\r\n        .then(response => {\r\n            \r\n            console.log('getPersonList ', response.results);\r\n\r\n            dispatch(setPersonList(response.results));\r\n            dispatch(PersonListIsFetching(true));\r\n\r\n            const payload = {\r\n                total_results: response.total_results,\r\n                total_pages: response.total_pages\r\n            }\r\n            dispatch(setTotalPages(payload));\r\n\r\n        })\r\n}\r\n\r\n\r\nexport default people_reducer;","import React from 'react';\r\n// import './../../../styles/popular_movies.css';\r\n\r\n\r\n\r\n\r\nconst FilterPanel = ({ request, setRequestData, genres, setRequestDataGenreIds, getDiscoverMovies, ...props }) => {\r\n\r\n    // console.log('props=', props);\r\n\r\n    return (\r\n        <>\r\n            <div className='sort border'>\r\n                <h6>Сортировка</h6>\r\n                <hr />\r\n                <p>Сортировать по:</p>\r\n                <select value={request.sort_by} onChange={(e) => setRequestData({ sort_by: e.target.value, btn_is_visible: true })}>\r\n                    <option value='popularity.asc'>популярности (возрастание)</option>\r\n                    <option value='popularity.desc'>популярности (убывание)</option>\r\n                    <option value='original_title.asc'>названию (возрастание)</option>\r\n                    <option value='original_title.desc'>названию (убывание)</option>\r\n                    <option value='release_date.asc'>дата релиза (возрастание)</option>\r\n                    <option value='release_date.desc'>дата релиза (убывание)</option>\r\n                </select>\r\n            </div>\r\n            <div className='filter border'>\r\n                <h6>Фильтр</h6>\r\n                <hr />\r\n                <p>Дата выхода:</p>\r\n                <label>\r\n                    от <input type='date' value={request.release_date_gte} onChange={(e) => setRequestData({ release_date_gte: e.target.value, btn_is_visible: true })} />\r\n                    <br />\r\n                            до <input type='date' value={request.release_date_lte} onChange={(e) => setRequestData({ release_date_lte: e.target.value, btn_is_visible: true })} />\r\n                </label>\r\n                <hr />\r\n                <p>Жанры:</p>\r\n                {genres && genres.map((item, index) =>\r\n                    <span\r\n                        className={request.genres_ids.indexOf(item.id) !== -1 ? 'active border' : 'border'}\r\n                        key={item.id}\r\n                        onClick={() => setRequestDataGenreIds(item.id, true)}\r\n                    >\r\n                        {item.name}\r\n                    </span>)\r\n                }\r\n            </div>\r\n\r\n            {request.btn_is_visible &&\r\n                <div className='request_btn' onClick={() => {\r\n                    setRequestData({ btn_is_visible: false });\r\n                    getDiscoverMovies(request);\r\n                    props.setCurrentPage(1);\r\n                }}>Применить</div>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default FilterPanel;","import React, { useEffect } from 'react';\r\nimport RateStars from './rateStars';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { NavDropdown } from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\nconst Card = ({ item, session_id, rateMovie, rateMovieRemove, isAuth, your_rate, accountStates, rateVisibleId, setRateVisibleId }) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className='card_wrapp'>\r\n            {/* <NavDropdown title=\"0\" id=\"basic-nav-dropdown\">\r\n\r\n            </NavDropdown> */}\r\n            <div className={`rate_drop_down border ${rateVisibleId === item.id ? 'visible' : ''}`}>\r\n                {isAuth\r\n                    ? <>\r\n                        \r\n                        <RateStars\r\n                            id={item.id}\r\n                            // rate={rate}\r\n                            rateMovie={rateMovie}\r\n                            your_rate={your_rate}\r\n                            setRateVisibleId={setRateVisibleId}\r\n                            rateMovieRemove={rateMovieRemove}\r\n                        />\r\n\r\n\r\n                    </>\r\n                    : <>\r\n                        <p>Хотите оценить?</p>\r\n                        <NavLink to='login' className='navbar-brand'>Войти</NavLink>\r\n                    </>\r\n                }\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <div className='rate_btn border' onClick={(e) => {\r\n                if (!rateVisibleId) {\r\n                    const id = item.id;\r\n                    accountStates({ id, session_id });\r\n                    setRateVisibleId(item.id);\r\n                } else {\r\n                    setRateVisibleId(null);\r\n                }\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }}>\r\n                {/* &#9660; */}\r\n                {/* сердечко &#10084; */}\r\n                &#9733;\r\n            </div>\r\n\r\n            <NavLink to={`/movie-info/${item.id}`} className='navbar-brand'>\r\n                <div className='card'>\r\n                    <div className='content'>\r\n                        <img src={item.poster_path ? `https://image.tmdb.org/t/p/w500${item.poster_path}` : '/img/no_poster.jpg'} alt='популярный фильм' />\r\n\r\n\r\n                            <div className='description'>\r\n                                <span>{item.title}</span>\r\n                                <br />\r\n                                <span><i>{item.release_date}</i></span>\r\n                                <span>Рейтинг: {item.vote_average}</span>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Card;","import React, { useState, useEffect } from 'react';\r\nimport './../../../styles/popular_movies.css';\r\nimport { Spinner, Popover, OverlayTrigger, Button } from 'react-bootstrap';\r\n// import PaginationButtons from '../../pagination/PaginationButtons';\r\nimport Card from './Card';\r\n\r\n\r\n// import { fetchingPopularMovies } from '../../redux/movie_reducer';\r\n\r\n\r\n\r\n\r\nconst MoviesList = ({ rateMovieDelete, discover_movies_is_fetching, data, isAuth, session_id, setRateMovie, accountStates, your_rate, ...props }) => {\r\n    // debugger;\r\n\r\n\r\n    return (\r\n        <div className='card_container'>\r\n            {discover_movies_is_fetching\r\n                ? <Cards\r\n                    data={data}\r\n                    isAuth={isAuth}\r\n                    session_id={session_id}\r\n                    setRateMovie={setRateMovie}\r\n                    accountStates={accountStates}\r\n                    your_rate={your_rate}\r\n                    rateMovieDelete={rateMovieDelete}\r\n                />\r\n                : <Spinner animation='border' />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst Cards = ({ data, isAuth, setRateMovie, session_id, accountStates, your_rate, rateMovieDelete }) => {\r\n\r\n\r\n    console.log('isAuth=', isAuth);\r\n    // console.log('default_rate', your_rate);\r\n\r\n\r\n    // const [rate, setRate] = useState(0);\r\n\r\n    const [rateVisibleId, setRateVisibleId] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        //document.addEventListener('click', handleClickOutside);\r\n        //return () => document.removeEventListener('click', handleClickOutside);\r\n    }, []);\r\n\r\n    const handleClickOutside = (e) => {\r\n\r\n        const rate_drop_down = document.getElementsByClassName('rate_drop_down');\r\n        const rate_btn = document.getElementsByClassName('.rate_btn');\r\n\r\n        for (let b in rate_drop_down)\r\n            if (!e.path.includes(b)) {\r\n                // Если в области кликнутого элемента нет \"rate_drop_down\", то проверяем ниже\r\n                // Не произведен ли клик на кнопку, открывающую окно смайлов\r\n                for (let c in rate_btn)\r\n                    if (!e.path.includes(c)) setRateVisibleId(null);\r\n                // Если клик не производился и на кнопку открытия окна смайлов, то скрываем блок.\r\n\r\n\r\n            }\r\n\r\n        // setRateVisibleId(null);\r\n    }\r\n\r\n\r\n\r\n    const rateMovie = ({ id, rate }) => {\r\n        setRateMovie({ id, session_id, rate });\r\n    }\r\n\r\n    const rateMovieRemove = ({ id }) => {\r\n        rateMovieDelete({ id, session_id });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {data.length > 0\r\n            ?data.map(item =>\r\n                <Card\r\n                    key={item.id}\r\n                    item={item}\r\n                    session_id={session_id}\r\n                    rateMovie={rateMovie}\r\n                    rateMovieRemove={rateMovieRemove}\r\n                    isAuth={isAuth}\r\n                    your_rate={your_rate}\r\n                    accountStates={accountStates}\r\n                    rateVisibleId={rateVisibleId}\r\n                    setRateVisibleId={setRateVisibleId}\r\n                />\r\n            )\r\n            : <p>Нет фильмов, соответствующих данному фильтру</p>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default MoviesList;","import React, { useState } from 'react';\r\nimport './../../../styles/rate_stars.css';\r\n\r\nlet stars = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\n\r\nconst RateStars = ({rateMovie, id, your_rate, setRateVisibleId, rateMovieRemove}) => {\r\n\r\n    const [star, setnumberOfStars] = useState(null);\r\n\r\n    return (\r\n        <div className='rate_stars_container border'>\r\n            <div className='rate_star_wrap' onMouseOut={() => setnumberOfStars(null)}>\r\n            \r\n            <div className='remove_rate border'\r\n                onClick={() => {\r\n                    setRateVisibleId(null);\r\n                    rateMovieRemove({id});\r\n                }\r\n            }>\r\n                &#10006;\r\n            </div>\r\n                {\r\n                    stars.map((rate, index) => {\r\n                        return (\r\n                            <div\r\n                                key={rate}\r\n                                className={`rate_star ${index < your_rate ? 'active' : ''}${index == star ? ' red' : ''}`}\r\n                                onMouseOver={() => setnumberOfStars(index)}\r\n                                onMouseOut={() => {\r\n                                    // if(rate <= 1) setnumberOfStars(0);\r\n                                }}\r\n                                onClick={() => {\r\n                                   \r\n                                    rateMovie({id, rate});\r\n                                    // setRateVisibleId(null);\r\n                                    setnumberOfStars(null);\r\n                                }}\r\n                               \r\n                            >\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                {/* <div className='border'>({rate > 0 ? rate+1 : 0}){your_rate}</div> */}\r\n                {/* <div className='border'>&nbsp;{your_rate}</div> */}\r\n                <div>&nbsp;{your_rate ? your_rate : 0 }</div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default RateStars;"],"sourceRoot":""}