{"version":3,"sources":["common/mySetDate.js","common/mySelectDate.js","components/mainPage/moviesList/NowPlayingContainer.js"],"names":["mySetDate","d","locate","options","year","month","day","timezone","Date","toLocaleString","selectDate","amount","type","D","setMonth","getMonth","setDate","getDate","connect","state","genres","request","discover","discover_movies_is_fetching","discover_movies","current_page","pagination","total_pages","total_results","isAuth","auth","session_id","your_rate","movies","getGenres","setCurrentPage","setRequestData","setRequestDataGenreIds","getDiscoverMovies","discoverMoviesIsFetching","rateMovie","getAccountStates","rateMovieDelete","popular_movies","popular_movies_isFetching","props","getDetails","authentication","useEffect","release_date_gte","sort_by","mySelectDate","release_date_lte","btn_is_visible","className","href","target","data","setRateMovie","id","rate","accountStates"],"mappings":"2GAceA,IAdG,SAACC,GAAoB,IAAjBC,EAAgB,uDAAT,KACnBC,EAAU,CACZC,KAAM,UACNC,MAAO,UACPC,IAAK,UAILC,SAAU,OAEd,MAAW,KAAJN,EAAS,KAAO,IAAIO,KAAKP,GAAGQ,eAAeP,EAAQC,K,iCCJ/CO,IANI,SAACC,EAAQC,GACxB,IAAIC,EAAI,IAAIL,KACZ,MAAgB,UAATI,EAAmBC,EAAEC,SAASD,EAAEE,WAAaJ,GAAUE,EAAEG,QAAQH,EAAEI,UAAYN,K,8JCmI3EO,uBAjBS,SAAAC,GAAK,MAAK,CAC9BC,OAAQD,EAAMC,OAAOA,OACrBC,QAASF,EAAMG,SAASD,QACxBE,4BAA6BJ,EAAMG,SAASC,4BAC5CC,gBAAiBL,EAAMG,SAASE,gBAChCC,aAAcN,EAAMO,WAAWD,aAC/BE,YAAaR,EAAMO,WAAWC,YAC9BC,cAAeT,EAAMO,WAAWE,cAChCC,OAAQV,EAAMW,KAAKD,OACnBE,WAAYZ,EAAMW,KAAKC,WACvBC,UAAWb,EAAMc,OAAOD,aAQxB,CACIE,cACAC,mBACAC,mBACAC,2BACAC,sBACAC,6BACAC,cACAC,qBACAC,qBAVOxB,EAnHa,SAAC,GAsBlB,IApBHM,EAoBE,EApBFA,gBACAc,EAmBE,EAnBFA,kBACAf,EAkBE,EAlBFA,4BAGAW,GAeE,EAjBFS,eAiBE,EAhBFC,0BAgBE,EAfFV,WACAd,EAcE,EAdFA,OACAgB,EAaE,EAbFA,eACAf,EAYE,EAZFA,QACAgB,EAWE,EAXFA,uBAEAR,GASE,EAVFU,yBAUE,EATFV,QACAW,EAQE,EARFA,UACAT,EAOE,EAPFA,WACAU,EAME,EANFA,iBACAT,EAKE,EALFA,UACAU,EAIE,EAJFA,gBAGGG,GACD,EAHFC,WAGE,EAFFC,eAEE,wVAKNC,qBAAU,WACNV,EAAkBjB,EAASwB,EAAMpB,gBAClC,CAACoB,EAAMpB,aAAcJ,EAAQ4B,mBAIhCD,qBAAU,WACNd,IACAE,EACI,CACIc,QAAS,kBACTD,iBAAkBjD,YAAUmD,aAAc,EAAG,SAAU,SACvDC,iBAAkBpD,YAAUmD,YAAa,EAAG,OAAQ,SACpDE,gBAAgB,IAGxBhB,EAAuB,MAAM,KAC9B,IAcH,OACI,oCACI,yBAAKiB,UAAU,UACX,6MAAsC,uBAAGC,KAAK,6BAA6BC,OAAO,UAA5C,SAAtC,MAEJ,yBAAKF,UAAU,iBACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,eACIjC,QAASA,EACTe,eAAgBA,EAChBhB,OAAQA,EACRiB,uBAAwBA,EACxBC,kBAAmBA,GACfO,KAGZ,yBAAKS,UAAU,qBACX,kBAAC,IAAsBT,GACvB,6BACA,kBAAC,IAAD,eACItB,4BAA6BA,EAC7BkC,KAAMjC,EACNK,OAAQA,EACR6B,aAhCC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,GAAI5B,EAAuB,EAAvBA,WAAY6B,EAAW,EAAXA,KAChC/B,GAAQW,EAAU,CAAEmB,KAAI5B,aAAY6B,UAgCxB7B,WAAYA,EACZ8B,cA9BE,SAAC,GAAwB,IAAtBF,EAAqB,EAArBA,GAAI5B,EAAiB,EAAjBA,WACrBF,GAAQY,EAAiB,CAAEkB,KAAI5B,gBA8BnBC,UAAWA,EACXU,gBAAiBA,GACbG,IAER,6BACA,kBAAC,IAAsBA","file":"static/js/13.d7205eef.chunk.js","sourcesContent":["const mySetDate = (d, locate='ru') => {\r\n    const options = {\r\n        year: 'numeric',\r\n        month: 'numeric',\r\n        day: 'numeric',\r\n        // hour: 'numeric',\r\n        // minute: 'numeric',\r\n        // second: 'numeric',\r\n        timezone: 'UTC'\r\n    };\r\n    return d==='' ? null : new Date(d).toLocaleString(locate, options);\r\n}\r\n\r\n\r\nexport default mySetDate;","const selectDate = (amount, type) => {\r\n    let D = new Date();\r\n    return type === 'month' ? D.setMonth(D.getMonth() + amount) : D.setDate(D.getDate() + amount);\r\n  }\r\n\r\n\r\nexport default selectDate;","import React, { useEffect } from 'react';\r\nimport './../../../styles/popular_movies.css';\r\nimport { connect } from 'react-redux';\r\nimport { getGenres } from '../../../redux/genres_reducer';\r\nimport { getDiscoverMovies, setRequestData, setRequestDataGenreIds, discoverMoviesIsFetching } from '../../../redux/discover_reducer';\r\nimport { setCurrentPage } from '../../../redux/pagination_reducer';\r\nimport { rateMovie, getAccountStates, rateMovieDelete } from '../../../redux/movie_reducer';\r\nimport FilterPanel from './FilterPanel';\r\nimport MoviesList from './MoviesList';\r\nimport mySetDate from '../../../common/mySetDate';\r\nimport mySelectDate from '../../../common/mySelectDate';\r\nimport PaginationButtons from './../../pagination/PaginationButtons';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst NowPlayingContainer = (\r\n    {\r\n        discover_movies,\r\n        getDiscoverMovies,\r\n        discover_movies_is_fetching,\r\n        popular_movies,\r\n        popular_movies_isFetching,\r\n        getGenres,\r\n        genres,\r\n        setRequestData,\r\n        request,\r\n        setRequestDataGenreIds,\r\n        discoverMoviesIsFetching,\r\n        isAuth,\r\n        rateMovie,\r\n        session_id,\r\n        getAccountStates,\r\n        your_rate,\r\n        rateMovieDelete,\r\n        getDetails,\r\n        authentication,\r\n        ...props\r\n    }) => {\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getDiscoverMovies(request, props.current_page);\r\n    }, [props.current_page, request.release_date_gte]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getGenres();\r\n        setRequestData(\r\n            {\r\n                sort_by: 'popularity.desc',\r\n                release_date_gte: mySetDate(mySelectDate(-1, 'month'), 'fr-CA'),\r\n                release_date_lte: mySetDate(mySelectDate(6, 'day'), 'fr-CA'),\r\n                btn_is_visible: false\r\n            }\r\n        );\r\n        setRequestDataGenreIds(null, false);\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    const setRateMovie = ({ id, session_id, rate }) => {\r\n        if (isAuth) rateMovie({ id, session_id, rate });\r\n    }\r\n\r\n    const accountStates = ({ id, session_id }) => {\r\n        if (isAuth) getAccountStates({ id, session_id });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='tittle'>\r\n                <h5>Фильмы, которые смотрят сейчас на <a href='https://www.themoviedb.org' target='_blank'> TMDb</a>:</h5>\r\n            </div>\r\n            <div className='sides_wrapper'>\r\n                <div className='left_side'>\r\n                    <FilterPanel\r\n                        request={request}\r\n                        setRequestData={setRequestData}\r\n                        genres={genres}\r\n                        setRequestDataGenreIds={setRequestDataGenreIds}\r\n                        getDiscoverMovies={getDiscoverMovies}\r\n                        {...props}\r\n                    />\r\n                </div>\r\n                <div className='right_side border'>\r\n                    <PaginationButtons {...props} />\r\n                    <hr />\r\n                    <MoviesList\r\n                        discover_movies_is_fetching={discover_movies_is_fetching}\r\n                        data={discover_movies}\r\n                        isAuth={isAuth}\r\n                        setRateMovie={setRateMovie}\r\n                        session_id={session_id}\r\n                        accountStates={accountStates}\r\n                        your_rate={your_rate}\r\n                        rateMovieDelete={rateMovieDelete}\r\n                        {...props}\r\n                    />\r\n                    <hr />\r\n                    <PaginationButtons {...props} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    genres: state.genres.genres,\r\n    request: state.discover.request,\r\n    discover_movies_is_fetching: state.discover.discover_movies_is_fetching,\r\n    discover_movies: state.discover.discover_movies,\r\n    current_page: state.pagination.current_page,\r\n    total_pages: state.pagination.total_pages,\r\n    total_results: state.pagination.total_results,\r\n    isAuth: state.auth.isAuth,\r\n    session_id: state.auth.session_id,\r\n    your_rate: state.movies.your_rate\r\n})\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        getGenres,\r\n        setCurrentPage,\r\n        setRequestData,\r\n        setRequestDataGenreIds,\r\n        getDiscoverMovies,\r\n        discoverMoviesIsFetching,\r\n        rateMovie,\r\n        getAccountStates,\r\n        rateMovieDelete \r\n    })(NowPlayingContainer);"],"sourceRoot":""}